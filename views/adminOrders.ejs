<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Orders</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
        * {
            /* font-family: 'poppins', sans-serif; */
            font-family: 'Trebuchet MS', sans-serif;

        }

        h1 {
            text-align: center;
            margin: 20px 0;
            color: #f0ad4e;
            font-size: 2.5rem;
            font-weight: 900;
            /* Header Accent Color */
        }

        body {
            /* Dark Theme Background */
            background-color: #121212;
            margin: 0;
            padding: 0;
            display: flex;
            /* Enable flexbox */
            justify-content: center;
            /* Center horizontally */
            align-items: center;
            /* Center vertically */
            min-height: 100vh;
            /* Ensure the body takes full height */
        }

        .container {
            font-size: 0.9rem;
            margin: 40px auto;
            /* Center horizontally */
            padding: 0px 20px;
            background: #2a2a2a;
            /* Slightly Lighter Dark Box */
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(216, 198, 163, 0.749);
            width: 100%;
            /* Responsive width */
            max-width: 90%;
            /* Prevent the container from becoming too wide */
        }


        table {
            width: 100%;
            border-collapse: collapse;
            margin: 40px 0;
            background-color: #2a2a2a;

        }

        table th,
        table td {
            padding: 20px 20px;
            text-align: left;
            font-weight: 900;
        }

        table th {
            background-color: #f0ad4e;
            box-shadow: 0px 5px 15px rgba(240, 173, 78, 0.4);
            /* border-radius: 500px; */
            /* Header Row Color */
            color: #121212;
            /* Dark Text */
            font-weight: bold;
            text-transform: uppercase;
            /* margin: 50px 20px; */


        }

        table tbody tr {
            /* background-color: 252526; */
            transition: transform 0.2s, box-shadow 0.2s;
            border-bottom: 3px solid rgb(91, 90, 88)
        }

        table tbody tr:hover {
            transform: scale(1.02);
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
        }

        table tbody td {
            /* border-bottom: 1px solid #444; */
            color: #ffffff;
        }

        /* Status Buttons */
        .status-btn {
            display: inline-block;
            padding: 8px 15px;
            border-radius: 50px;
            font-weight: bold;
            text-transform: uppercase;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
        }

        .pending {
            background-color: #2a2a2a;
            border: 1px solid #f0ad4e;
            color: #f0ad4e;
        }

        .pending:hover {
            background: #f0ad4e;
            color: #2a2a2a;
            transform: translateY(-3px);
            box-shadow: 0px 5px 15px rgba(240, 173, 78, 0.4);

        }

        .delivered {

            background-color: #2a2a2a;
            border: 1px solid #66BB6A;
            color: #66BB6A;
        }

        .delivered:hover {
            background-color: #43A047;
            color: #2a2a2a;
        }


        .new-order-btn {
            background-color: #252526;
            border: 2px solid #f0ad4e;
            color: #f0ad4e;
            padding: 10px 20px;
            margin-bottom: 10px;
            border-radius: 10px;
            text-transform: uppercase;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .new-order-btn:hover {
            background-color: #f0ad4e;
            color: #252526;
        }

        /* 
        .orderDetails {
            border: 2px solid red;
        } */

        /* Responsive Design */
        @media screen and (max-width: 768px) {

            table,
            table thead,
            table tbody,
            table th,
            table td,
            table tr {
                display: block;
            }

            table tr {
                margin-bottom: 15px;
                border: 1px solid #444;
                border-radius: 10px;
                overflow: hidden;
            }

            table td {
                text-align: right;
                padding-left: 50%;
                position: relative;
            }

            table td::before {
                content: attr(data-label);
                position: absolute;
                left: 10px;
                width: 45%;
                font-weight: bold;
                text-align: left;
            }
        }

        #name {
            color: #f0ad4e;
            text-decoration: none;
        }

        #name:hover {
            text-decoration: underline;
        }

        /* Controls */
        .controls {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .controls input,
        .controls select,
        .controls button {
            padding: 10px;
            margin-right: 10px;
            border: none;
            border-radius: 5px;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .pagination button {
            margin: 0 5px;
            padding: 10px 15px;
            border: none;
            background-color: #c97200;
            color: #121212;
            border-radius: 5px;
            cursor: pointer;
        }

        .pagination button:hover {
            background-color: #f0ad4e;
        }

        .pagination button.active {
            background-color: #f0ad4e;
            font-weight: bold;
        }

        .fade-in {
            animation: fadeInAnimation 0.5s ease-in-out;
        }

        @keyframes fadeInAnimation {
            from {
                opacity: 0;
                transform: translateY(20px);
                /* Optional: Slide effect */
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>

<body>

    <div class="container fade-in">
        <h1>Orders</h1>
        <!-- Search and Filter Controls -->
        <div class="controls">
            <input type="text" id="searchBox" placeholder="Search Orders..." oninput="searchOrders()">
            <select id="statusFilter" onchange="filterOrders()">
                <option value="">All Status</option>
                <option value="Pending">Pending</option>
                <option value="Delivered">Delivered</option>
                <option value="Canceled">Canceled</option>
            </select>
            <button onclick="sortOrders()">Sort by Total Price</button>
        </div>
        <table>
            <thead>
                <tr>
                
                    <th>Order ID</th>
                    <th>User Name</th>
                    <th>Order Details</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order=> { %>
                    <tr>
                        <td data-label="Order ID">
                            <%= order._id %>
                        </td>
                        <td data-label="User Name">
                            <a id="name" href="http://localhost:3000/admin/user/<%= order.userId %>">
                                <%= order.userName %>
                            </a>
                        </td>
                        <td data-label="Order Details">
                            <% order.purchases.forEach(purchase=> { %>
                                <p class="orderDetails">
                                    <strong>
                                        <%= purchase.name %>
                                    </strong>
                                </p>
                                <% }); %>
                        </td>
                        <td data-label="Quantity">
                            <% order.purchases.forEach(purchase=> { %>
                                <p class="orderQuantity">
                                    <%= purchase.quantity %> Ã— <%= purchase.totalPrice / purchase.quantity %>
                                </p>
                                <% }); %>
                        </td>
                        <td data-label="Total Price">
                            <%= order.purchases.reduce((sum, p)=> sum + p.totalPrice, 0) %> /-
                        </td>
                        <td data-label="Status">
                            <% if (order.orderStatus==='Pending' ) { %>
                                <button class="status-btn pending"
                                    onclick="updateStatus('<%= order._id %>', 'Delivered')">Pending</button>
                                <% } else { %>
                                    <button class="status-btn delivered">Delivered</button>
                                    <% } %>
                        </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>
        <!-- Pagination Controls -->
        <div id="pagination">
            <% for (let i=1; i <=totalPages; i++) { %>
                <button onclick="changePage('<%= i %>')">
                    <%= i %>
                </button>
                <% } %>
        </div>
    </div>
    <style>
        /* Controls Styling */
        .controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            margin-bottom: 20px;
            gap: 10px;
        }

        .controls input,
        .controls select,
        .controls button {
            padding: 10px 15px;
            font-size: 0.9rem;
            border-radius: 25px;
            border: 2px solid #f0ad4e;
            background-color: #252526;
            color: #f0ad4e;
            outline: none;
            transition: all 0.3s ease;
            flex: 1 1 auto;
            /* Responsive flex behavior */
        }

        .controls input:focus,
        .controls select:focus,
        .controls button:focus {
            border-color: #f0ad4e;
            background-color: #f0ad4e;
            color: #252526;
        }

        .controls button {
            font-weight: bold;
            cursor: pointer;
            flex: 0 0 auto;
            /* Prevent button from stretching */
        }

        .controls button:hover {
            background-color: #f0ad4e;
            color: #121212;
            border-color: #f0ad4e;
        }

        .controls input::placeholder {
            color: #8d8d8d;
        }

        /* Pagination Styling */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 5px;
            margin-top: 20px;
        }

        .pagination button {
            padding: 10px 15px;
            font-size: 0.9rem;
            font-weight: bold;
            border-radius: 25px;
            border: 2px solid #f0ad4e;
            background-color: #252526;
            color: #f0ad4e;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .pagination button.active {
            background-color: #f0ad4e;
            color: #121212;
            border-color: #f0ad4e;
        }

        .pagination button:hover {
            background-color: #f0ad4e;
            border-color: #f0ad4e;
            color: #121212;
        }

        /* Responsive Design Enhancements for Controls */
        @media screen and (max-width: 768px) {
            .controls {
                flex-direction: column;
                align-items: stretch;
            }

            .controls input,
            .controls select,
            .controls button {
                width: 100%;
            }

            .pagination {
                flex-wrap: wrap;
            }

            .pagination button {
                width: 50px;
            }
        }
    </style>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript -->
    <script>

        async function updateStatus(orderId, status) {
            const response = await fetch('http://localhost:3000/admin/orders/update-status', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, status }),
            });

            const result = await response.json();
            if (result.success) {
                console.log("status updated")
                location.reload(); // Reload page to reflect changes
                const response = await fetch('http://localhost:3000/admin/orders/update-status')
            } else {
                alert(result.message);
            }
        }
        let searchTerm = "";
        let statusFilter = "";
        let sortOrder = "asc";

        // Search Function
        function searchOrders() {
            searchTerm = document.getElementById("searchBox").value;
            fetchOrders();
        }

        // Filter Function
        function filterOrders() {
            statusFilter = document.getElementById("statusFilter").value;
            fetchOrders();
        }

        // Sort Function
        function sortOrders() {
            sortOrder = sortOrder === "asc" ? "desc" : "asc";
            fetchOrders();
        }

        // Pagination Change
        function changePage(page) {
            fetchOrders(page);
        }

        // Fetch Orders with Filters
        async function fetchOrders(page = 1) {
            try {
                const response = await fetch(`http://localhost:3000/admin/orders?page=${page}&search=${searchTerm}&status=${statusFilter}&sort=${sortOrder}`);
                const parser = new DOMParser();
                const html = await response.text();
                const newDoc = parser.parseFromString(html, 'text/html');

                // Replace table body
                const newTableBody = newDoc.querySelector("table tbody");
                const oldTableBody = document.querySelector("table tbody");
                oldTableBody.innerHTML = newTableBody.innerHTML;

                // Update pagination
                const newPagination = newDoc.querySelector("#pagination");
                const oldPagination = document.querySelector("#pagination");
                oldPagination.innerHTML = newPagination.innerHTML;

            } catch (error) {
                console.error("Error fetching orders:", error);
            }
        }
    </script>
</body>

</html>